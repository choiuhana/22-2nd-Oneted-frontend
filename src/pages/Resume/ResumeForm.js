import React, { useState } from 'react';
import jsPDF from 'jspdf';
import html2canvas from 'html2canvas';

import styled from 'styled-components';

function ResumeForm() {
  const [inputTextData, setInputTextData] = useState({
    intro: '',
    career: '',
    education: '',
    skills: '',
  });

  const sumOfCharacters = Object.values(inputTextData).reduce(
    (sum, cur) => sum + cur.length,
    0
  );

  const handleOnchange = e => {
    setInputTextData({
      ...inputTextData,
      [e.target.name]: e.target.value,
    });
  };

  const generatePDF = () => {
    html2canvas(document.querySelector('#main')).then(canvas => {
      const doc = new jsPDF('p', 'pt', 'a4');
      window.scrollTo(
        0,
        document.body.scrollHeight || document.documentElement.scrollHeight
      );
      const imgData = canvas.toDataURL('image/png');

      doc.addImage(imgData, 'PNG', 30, 30, 700, 700);
      doc.save('sample.pdf');
    });
  };

  return (
    <Container>
      <div>
        <Header>
          <div>
            <button onClick={generatePDF} type="primary">
              <i className="fas fa-file-download"></i>
            </button>
          </div>
        </Header>
      </div>
      <Main id="main">
        <h1>PARK</h1>
        <div>
          <p>Ïù¥Î¶Ñ</p>
          <p>Î©îÏùº</p>
        </div>
        <Section>
          {DESCRIPTION.map(description => {
            return (
              <>
                <header>{description.title}</header>
                <ul>
                  {description.desc.map(descList => (
                    <li>{descList}</li>
                  ))}
                </ul>
                <textarea
                  onChange={handleOnchange}
                  name={description.name}
                  type="text"
                  value={inputTextData.name}
                  placeholder={description.placeholder}
                />
              </>
            );
          })}
        </Section>
      </Main>

      <Footer>
        <div>
          <div>
            <p>Í∏ÄÏûê Ïàò : {sumOfCharacters} </p>
          </div>

          <Wrapper>
            <div>
              <Progressbar>
                <Graph count={sumOfCharacters} />
              </Progressbar>

              <CheerText count={sumOfCharacters}>
                {sumOfCharacters < 400
                  ? 'üí™ 400Ïûê Ïù¥ÏÉÅ ÏûëÏÑ±ÌïòÏãúÎ©¥ Ïù¥Î†•ÏÑúÎ•º ÏôÑÎ£åÌï† Ïàò ÏûàÏñ¥Ïöî!'
                  : 'üëç ÌõåÎ•≠Ìïú Ïù¥Î†•ÏÑúÎ•º Î≥¥Ïú†ÌïòÍ≥† Í≥ÑÏãúÎäîÍµ∞Ïöî!'}
              </CheerText>
            </div>
            <BtnWrapper>
              <SaveBtn>
                <span>ÏûÑÏãú Ï†ÄÏû•</span>
              </SaveBtn>
              <CompleteBtn>
                <span>ÏûëÏÑ± ÏôÑÎ£å</span>
              </CompleteBtn>
            </BtnWrapper>
          </Wrapper>
        </div>
      </Footer>
    </Container>
  );
}
export default ResumeForm;

const DESCRIPTION = [
  {
    title: 'Í∞ÑÎã® ÏÜåÍ∞úÍ∏Ä',
    name: 'intro',
    desc: [
      '- Î≥∏Ïù∏Ïùò ÏóÖÎ¨¥ Í≤ΩÌóòÏùÑ Í∏∞Î∞òÏúºÎ°ú ÌïµÏã¨Ïó≠ÎüâÍ≥º ÏóÖÎ¨¥ Ïä§ÌÇ¨ÏùÑ Í∞ÑÎã®Ìûà ÏûëÏÑ±Ìï¥Ï£ºÏÑ∏Ïöî.',
      '- 3~5Ï§ÑÎ°ú ÏöîÏïΩÌïòÏó¨ ÏûëÏÑ±ÌïòÎäî Í≤ÉÏùÑ Ï∂îÏ≤úÌï©ÎãàÎã§!',
    ],
    placeholder:
      'Í∞ÑÎã®Ìïú ÏûêÍ∏∞ÏÜåÍ∞úÎ•º ÌÜµÌï¥ Ïù¥Î†•ÏÑúÎ•º ÎèãÎ≥¥Ïù¥Í≤å ÎßåÎì§Ïñ¥Î≥¥ÏÑ∏Ïöî. (3 - 5Ï§Ñ Í∂åÏû•)',
  },
  {
    title: 'Í≤ΩÎ†•',
    name: 'career',
    desc: [
      '- Îã¥ÎãπÌïòÏã† ÏóÖÎ¨¥ Ï§ë Ïö∞ÏÑ†ÏàúÏúÑÍ∞Ä ÎÜíÏùÄ ÏóÖÎ¨¥Î•º ÏÑ†Î≥ÑÌïòÏó¨ ÏµúÏã†ÏàúÏúºÎ°ú ÏûëÏÑ±Ìï¥Ï£ºÏÑ∏Ïöî.',
      '- Í≤ΩÎ†•ÏÇ¨Ìï≠Ïù¥ ÏóÜÎäî Í≤ΩÏö∞ Ïã†ÏûÖ ÏúºÎ°ú ÏûëÏÑ±Ìï¥Ï£ºÏÑ∏Ïöî.',
      '- ÏóÖÎ¨¥ ÏÑ±Í≥ºÎäî ÎêòÎèÑÎ°ù Íµ¨Ï≤¥Ï†ÅÏù∏ Ïà´Ïûê ÌòπÏùÄ %Î°ú ÌëúÌòÑÌï¥Ï£ºÏÑ∏Ïöî!',
    ],
    placeholder: 'Ï£ºÏöî Ïù¥Î†• ÏÇ¨Ìï≠Îì§ÏùÑ ÏûëÏÑ±Ìï¥Ï£ºÏÑ∏Ïöî.',
  },
  {
    title: 'ÌïôÎ†•',
    name: 'education',
    desc: ['- ÏµúÏã†ÏàúÏúºÎ°ú ÏûëÏÑ±Ìï¥Ï£ºÏÑ∏Ïöî.'],
    placeholder: 'ÏµúÏ¢Ö ÌïôÎ†•ÏùÑ Í∏∞ÏûÖÌï¥Ï£ºÏÑ∏Ïöî.',
  },
  {
    title: 'Ïä§ÌÇ¨',
    name: 'skills',
    desc: [
      '- Í∞úÎ∞ú Ïä§ÌÉù, ÎîîÏûêÏù∏ Ìà¥, ÎßàÏºÄÌåÖ Ìà¥ Îì± Í∞ÄÏßÄÍ≥† ÏûàÎäî ÏßÅÎ¨¥ÏôÄ Í¥ÄÎ†®Îêú Ïä§ÌÇ¨ÏùÑ Ï∂îÍ∞ÄÌï¥Î≥¥ÏÑ∏Ïöî.',
      '- Îç∞Ïù¥ÌÑ∞ Î∂ÑÏÑù Ìà¥Ïù¥ÎÇò ÌòëÏóÖ Ìà¥ Îì±Ïùò ÏÇ¨Ïö©Ìï¥Î≥∏ Í≤ΩÌóòÏù¥ ÏûàÏúºÏã† Ìà¥Îì§ÎèÑ Ï∂îÍ∞ÄÌï¥Î≥¥ÏÑ∏Ïöî.',
    ],
    placeholder: 'ÏóÖÎ¨¥ÏôÄ Í¥ÄÎ†®Îêú Ïä§ÌÇ¨Îì§ÏùÑ ÏûëÏÑ±Ìï¥Ï£ºÏÑ∏Ïöî.',
  },
];

const Container = styled.div`
  position: relative;
  margin: 0 54px;
`;

const Header = styled.div`
  position: fixed;
  height: 50px;
  width: 80%;

  div {
    padding-top: 50px;
    text-align: right;

    button {
      width: 40px;
      height: 40px;
      border-color: #999;
      color: #76797e;
      cursor: pointer;
      i {
        font-size: 20px;
      }
    }
  }
`;

const Main = styled.main`
  padding-top: 30px;

  h1 {
    margin: 130px 0 50px 0;
    font-size: 36px;
    font-weight: 500;
  }
  div {
    margin-bottom: 50px;
  }

  p {
    margin-top: 20px;
    font-size: 16px;
  }
`;

const CheerText = styled.p`
  color: ${props => (props.count > 400 ? 'blue' : 'black')};
`;

const Section = styled.section`
  margin-bottom: 40px;
  padding-bottom: 100px;

  header {
    padding: 20px 0 6px 0;
    border-bottom: 1px solid black;
  }

  ul {
    margin-top: 20px;
    background-color: #f3f9fe;

    li {
      margin-top: 10px;
    }
  }

  textarea {
    width: 1450px;
    margin-top: 30px;
    font-size: 16px;
    border: none;
    outline: none;
  }
`;

const Footer = styled.footer`
  position: fixed;
  width: 100%;
  height: 82px;
  bottom: 0;
  padding: 0 50px;
  border-top: 1px solid #e0e0e0;
  background-color: white;
  z-index: 20;

  p {
    line-height: 25px;
  }
`;

const Wrapper = styled.div`
  ${({ theme }) => theme.setFlex('space-between')}

  div {
    display: flex;
    align-items: center;
  }
`;
const Progressbar = styled.div`
  height: 9px;
  width: 150px;
  background-color: #e1e2e3;
  border-radius: 4.5px;
`;
const Graph = styled.div`
  height: 9px;
  width: ${props => `${props.count * 0.3}px`};

  background-color: #333333;
`;

const BtnWrapper = styled.div`
  display: flex;
  margin-right: 40px;

  button {
    width: 163px;
    height: 45px;
    padding: 14px 30px 13px 28px;
    border: 1px solid black;
    border-radius: 25px;
    font-size: 16px;
    cursor: pointer;
  }
`;

const SaveBtn = styled.button`
  border: 1px solid #36f;
  color: #36f;
`;

const CompleteBtn = styled.button`
  margin-left: 10px;
  background-color: #36f;
  color: white;
`;
